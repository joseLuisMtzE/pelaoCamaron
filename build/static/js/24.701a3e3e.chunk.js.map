{"version":3,"sources":["shared/Alert.js","assets/background.png","components/tables/Table.jsx","components/tables/NewTable.jsx","pages/Tables.jsx"],"names":["alertError","message","Swal","fire","icon","title","text","alertSuccess","module","exports","confirm","Modal","Table","table","deleteTable","editTablesRequest","useState","visible","setVisible","orderType","setOrderType","reservada","setReservada","numPersonas","setNumPersonas","useEffect","estado","handleClick","a","form","FormData","document","getElementById","_id","data","Object","fromEntries","tipoOrden","console","log","localStorage","setItem","JSON","stringify","noMesa","crearOrden","newOrder","order","makeRequest","observaciones","response","status","window","history","replaceState","location","href","modalTitle","size","onClick","className","onOk","onCancel","footer","id","placeholder","name","onChange","value","required","options","label","key","type","to","pathname","state","getRol","ExclamationCircleOutlined","content","okText","cancelText","okType","danger","DeleteFilled","undefined","detalles","LoadingOutlined","NewTable","addTable","PlusOutlined","onPressEnter","e","preventDefault","style","width","Tables","tables","setTables","selectedTables","setSelectedTables","filter","setFilter","getTablesRequest","addTablesRequest","temp","push","deleteTablesrequest","initState","result","forEach","t","index","splice","md","xs","src","Background","alt","map","lg","count","length","margin","display","top","position","spin"],"mappings":"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","file":"static/js/24.701a3e3e.chunk.js","sourcesContent":["import Swal from 'sweetalert2';\r\n\r\n    export function alertError(message){\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title:'Error' ,\r\n            text: message\r\n           // footer: '<a href>Why do I have this issue?</a>'\r\n        })\r\n    }\r\n\r\n    export function alertSuccess(message){\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: 'Proceso exitoso!',\r\n            text: message\r\n           // footer: '<a href>Why do I have this issue?</a>'\r\n        })\r\n    }\r\n\r\n \r\n","module.exports = __webpack_public_path__ + \"static/media/background.7eab2424.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Card, Modal, Cascader, Button, InputNumber } from 'antd';\r\nimport {\r\n  DeleteFilled,\r\n  ExclamationCircleOutlined,\r\n  LoadingOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { makeRequest, getRol } from '../../shared/ApiWrapper';\r\nimport { alertError } from '../../shared/Alert';\r\nconst { confirm } = Modal;\r\n\r\nexport default function Table({ table, deleteTable, editTablesRequest }) {\r\n  const options = [\r\n    {\r\n      value: 'Disponible',\r\n      label: 'Disponible'\r\n    },\r\n    {\r\n      value: 'No Disponible',\r\n      label: 'No Disponible'\r\n    },\r\n    {\r\n      value: 'Reservada',\r\n      label: 'Reservada'\r\n    }\r\n  ];\r\n\r\n  const optionsReservada = [\r\n    {\r\n      value: 'Disponible',\r\n      label: 'Disponible'\r\n    },\r\n    {\r\n      value: 'Reservada',\r\n      label: 'Reservada'\r\n    }\r\n  ];\r\n\r\n  const tipoOrdenOptions = [\r\n    {\r\n      value: 'Local',\r\n      label: 'Local'\r\n    },\r\n    {\r\n      value: 'Domicilio',\r\n      label: 'Domicilio'\r\n    }\r\n  ];\r\n\r\n  const onOrdenchange = value => {\r\n    if (value[0]) setOrderType(value[0]);\r\n    else setOrderType('');\r\n  };\r\n\r\n  const onchange = value => {\r\n    if (value[0]) table.estado = value[0];\r\n    if (value[0] !== 'Reservada') {\r\n      editTablesRequest(table._id, table.noMesa, table.estado);\r\n      setReservada(false);\r\n      setVisible(false);\r\n    } else setReservada(true);\r\n  };\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [orderType, setOrderType] = useState('');\r\n  // const [order, setOrder] = useState({});\r\n  const [reservada, setReservada] = useState(false);\r\n  const [numPersonas, setNumPersonas] = useState(0);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (table.estado === 'Reservada') {\r\n      setReservada(true);\r\n    }\r\n  }, [table.estado]);\r\n\r\n  const handleClick = async () => {\r\n    const form = new FormData(document.getElementById(table._id));\r\n    const data = Object.fromEntries(form);\r\n    data.tipoOrden = orderType;\r\n    console.log(data);\r\n    localStorage.setItem('domicilio', JSON.stringify(data));\r\n    localStorage.setItem('noMesa', table.noMesa);\r\n    if (orderType === 'Local') {\r\n      const newOrder = await crearOrden(data);\r\n      // setOrder(newOrder);\r\n      console.log(newOrder);\r\n    }\r\n  };\r\n\r\n  const crearOrden = async order => {\r\n    try {\r\n      let response = await makeRequest('POST', `mesas/${table._id}/ordenes`, {\r\n        numPersonas: order.numPersonas,\r\n        tipoOrden: order.tipoOrden,\r\n        observaciones: order.observaciones\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        console.log('Orden creada correctamente');\r\n        window.history.replaceState(\r\n          null,\r\n          null,\r\n          'http://localhost:3000/agregar-platillos/' + response.data.data._id\r\n        );\r\n      } else {\r\n        window.location.href = '/mesas';\r\n        alertError('Hubo un error al crear la orden');\r\n      }\r\n      let data = response.data.data;\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      window.location.href = '/mesas';\r\n      alertError('Hubo un error al crear la orden');\r\n    }\r\n  };\r\n\r\n  const showConfirm = () => {\r\n    setVisible(false);\r\n    confirm({\r\n      title: `¿Quieres eliminar la mesa ${table.noMesa}?`,\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: `La mesa ${table.noMesa} será eliminada de la lista de mesas.`,\r\n      okText: 'Eliminar',\r\n      cancelText: 'Cancelar',\r\n      okType: 'danger',\r\n      onOk() {\r\n        deleteTable(table.noMesa, table._id);\r\n      },\r\n      onCancel() {}\r\n    });\r\n  };\r\n  const onNumberChange = value =>{\r\n    if(value)\r\n      setNumPersonas(value)\r\n    else\r\n      setNumPersonas(0)\r\n  }\r\n  const reservar = () => {\r\n    const form = new FormData(document.getElementById(table._id));\r\n    const data = Object.fromEntries(form);\r\n    if (data.detalles === undefined || data.detalles === '')\r\n      data.detalles = ' ';\r\n    editTablesRequest(table._id, table.noMesa, table.estado, data.detalles);\r\n    setVisible(false);\r\n  };\r\n\r\n  const setLocalStorage = () => {\r\n    localStorage.setItem('noMesa', table.noMesa);\r\n    localStorage.setItem('mesaID', table._id);\r\n  };\r\n\r\n  var title = `Mesa ${table.noMesa}`;\r\n  var modalTitle = `Mesa ${table.noMesa} - ${table.estado}`;\r\n  return (\r\n    <div>\r\n      <Card size=\"small\" onClick={showModal} title={title} className=\"card\">\r\n        <p>{`Mesa ${table.estado}`}</p>\r\n        {table.estado === 'Disponible' ? (\r\n          <div className=\"disponible\"></div>\r\n        ) : table.estado === 'Ocupada' ? (\r\n          <div className=\"ocupada\"></div>\r\n        ) : (\r\n          <div className=\"reservada\"></div>\r\n        )}\r\n      </Card>\r\n      <Modal\r\n        title={modalTitle}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={\r\n          table.estado === 'Disponible'\r\n            ? [\r\n              <form id={table._id}>\r\n                <strong>Abrir cuenta</strong>\r\n                <p>¿Cuántas personas?</p>\r\n                <InputNumber placeholder=\"0\" name=\"numPersonas\" onChange={onNumberChange}/>\r\n                <p>Tipo de orden: </p>\r\n                <Cascader\r\n                  required\r\n                  name=\"tipoOrden\"\r\n                  options={tipoOrdenOptions}\r\n                  onChange={onOrdenchange}\r\n                  placeholder=\"Tipo de orden...\"\r\n                />\r\n                <p>Observaciones: </p>\r\n                <TextArea\r\n                  name=\"observaciones\"\r\n                  placeholder=\"Agregar observaciones...\"\r\n                />\r\n                <Button key=\"submit\" type=\"primary\" className=\"margin\">\r\n                  {orderType!==''&&numPersonas!==0 &&(\r\n                    <Link\r\n                      onClick={handleClick}\r\n                      to={{\r\n                        pathname:\r\n                          orderType === 'Local'\r\n                            ? '/agregar-platillos/:id'\r\n                            : '/home-delivery/',\r\n                        state:{\r\n                          'idMesa': table._id\r\n                        }\r\n                      }}\r\n                    >\r\n                    Abrir cuenta\r\n                    </Link>\r\n                  )}\r\n                </Button>\r\n              </form>\r\n            ]\r\n            : null\r\n        }\r\n      >\r\n        {table.estado !== 'Ocupada' ? (\r\n          <div>\r\n            <strong>Editar</strong>\r\n            <br />\r\n            <Cascader\r\n              options={reservada ? optionsReservada : options}\r\n              onChange={onchange}\r\n              placeholder=\"Estado de la mesa...\"\r\n            />\r\n            {getRol() === 'Dueño' ? (\r\n              <Button onClick={showConfirm} type=\"primary\" danger>\r\n                <DeleteFilled />\r\n              </Button>\r\n            ) : null}\r\n            {reservada && (\r\n              <form id={table._id}>\r\n                <TextArea\r\n                  name=\"detalles\"\r\n                  placeholder=\"Observaciones de la reservación...\"\r\n                  className=\"margin-top\"\r\n                ></TextArea>\r\n                <Button className=\"margin-top reservar-btn\" onClick={reservar}>\r\n                  Reservar\r\n                </Button>\r\n              </form>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <strong>Orden en proceso...</strong>\r\n            <br />\r\n            <LoadingOutlined />\r\n\r\n            <br />\r\n            <Button type=\"primary\" className=\"margin\">\r\n              <Link\r\n                onClick={setLocalStorage}\r\n                to={{\r\n                  pathname: '/ver-orden/:id'\r\n                }}\r\n              >\r\n                Ver orden\r\n              </Link>\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Card, Button, Modal, Input } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport default function NewTable({ addTable }) {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    const form = new FormData(document.getElementById('form'));\r\n    const data = Object.fromEntries(form);\r\n    data.estado = 'Disponible';\r\n    setVisible(false);\r\n    addTable(data);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  // const handleKeyPress = event => {\r\n  //   if (\r\n  //     (event.which !== 8 && event.which !== 0 && event.which < 48) ||\r\n  //     event.which > 57\r\n  //   ) {\r\n  //     event.preventDefault();\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <Card onClick={showModal} size=\"small\" className=\"card\">\r\n        <Button\r\n          type=\"link\"\r\n          size=\"large\"\r\n          icon={<PlusOutlined className=\"big-size\" />}\r\n          className=\"add-btn-2\"\r\n        ></Button>\r\n      </Card>\r\n      <Modal\r\n        title=\"Nueva mesa\"\r\n        visible={visible}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <form id=\"form\">\r\n          <p>Número de mesa:</p>\r\n          <Input onPressEnter={(e)=>e.preventDefault()} name=\"noMesa\" size=\"large\" style={{ width: '25%' }} /><br/>\r\n          <Button type=\"primary\" onClick={handleOk} className=\"margin\">\r\n            Agregar\r\n          </Button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Cascader} from 'antd';\r\nimport Table from '../components/tables/Table';\r\nimport NewTable from '../components/tables/NewTable';\r\nimport Background from '../assets/background.png';\r\nimport {makeRequest} from '../shared/ApiWrapper';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport {alertSuccess,alertError} from '../shared/Alert';\r\n\r\n\r\n\r\nexport default function Tables() {\r\n  const [tables, setTables] = useState([]); //Tables\r\n  const [selectedTables, setSelectedTables] = useState([]); //Result cascader state\r\n  const [filter, setFilter] = useState('Todas'); //Cascader state\r\n\r\n  const onFilterChange = (value) => {\r\n    setFilter(value[0]);\r\n  };\r\n\r\n  const getTablesRequest = async () => {\r\n    try {\r\n      let response = await makeRequest('GET','mesas?isActive=true&&limit=100');\r\n      let data = response.data.data;\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const addTablesRequest = async (table) => {\r\n    console.log(table); \r\n    try {\r\n      let response = await makeRequest('POST','mesas',{ noMesa: table.noMesa})\r\n      let data = response.data.data;\r\n      if (response.status === 201) {\r\n        var temp = [...tables];\r\n        temp.push(data);\r\n        setTables(temp);\r\n        alertSuccess(`Mesa ${table.noMesa} creada correctamente`);\r\n      } else {\r\n        alertError('Hubo un error al crear la mesa');\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      alertError(`La mesa número ${table.noMesa} ya existe. Intenta con otro número`);\r\n    }\r\n  };\r\n\r\n  const deleteTablesrequest = async (id) => {\r\n    try {\r\n      let response = await makeRequest('DELETE',`mesas/${id}`)\r\n\r\n      if (response.status === 204) {\r\n        alertSuccess('Mesa borrada correctamente');\r\n      } else {\r\n        alertError('Hubo un error al borrar la Mesa');\r\n      }\r\n\r\n      let data = response.data.data;\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const editTablesRequest = async (id,noMesa,estado,detalles) => {\r\n    try {\r\n      let response = await makeRequest('PATCH',`mesas/${id}`,{\r\n        'estado': estado,\r\n        // 'noMesa':noMesa,\r\n        'reservaciones': {\r\n          'detalles': detalles\r\n        }\r\n      })\r\n\r\n      if (response.status === 200) {\r\n        detalles===undefined?\r\n          alertSuccess('Mesa editada correctamente'):\r\n          alertSuccess('Mesa reservada correctamente');\r\n      } else {\r\n        alertError('Hubo un error al editar la mesa');\r\n      }\r\n\r\n      let data = response.data.data;\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initState = async () => {\r\n      let data = await getTablesRequest();\r\n      console.log(data);\r\n      if(data)\r\n        setTables(data);\r\n    };\r\n    initState();\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    let result =\r\n      filter !== 'Todas'\r\n        ? tables.filter((table) => table.estado === filter)\r\n        : tables;\r\n\r\n    setSelectedTables(result);\r\n  }, [tables, filter]);\r\n\r\n  const options = [\r\n    {\r\n      value: 'Todas',\r\n      label: 'Todas',\r\n    },\r\n    {\r\n      value: 'Disponible',\r\n      label: 'Disponibles',\r\n    },\r\n    {\r\n      value: 'Ocupada',\r\n      label: 'Ocupadas',\r\n    },\r\n    {\r\n      value: 'Reservada',\r\n      label: 'Reservadas',\r\n    },\r\n  ];\r\n\r\n  const addTable = async(data) => {\r\n    await addTablesRequest(data);\r\n  };\r\n\r\n  const deleteTable = (noMesa,id) => {\r\n    var temp = [...tables];\r\n    temp.forEach((t, index) => {\r\n      if (t.noMesa === noMesa) temp.splice(index, 1);\r\n    });\r\n    setTables(temp);\r\n    deleteTablesrequest(id);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={24} xs={24}>\r\n        <img src={Background} alt=\"bg\" className=\"bg-img\"/>\r\n        <header className=\"header\">\r\n          <h1 className=\"h1\">Mesas</h1>\r\n        </header>\r\n      </Col>\r\n      <Col md={24} xs={24}>\r\n        <Col xs={12}>\r\n          <Cascader\r\n            size=\"large\"\r\n            options={options}\r\n            onChange={onFilterChange}\r\n            placeholder=\"Filtrar por...\"\r\n          />\r\n        </Col>\r\n        <Row>\r\n          {selectedTables.map((table) => (\r\n            <Col lg={4} md={6} xs={8} key={table._id}>\r\n              <Table\r\n                table={table}\r\n                noMesa={table.noMesa}\r\n                _id={table._id}\r\n                deleteTable={deleteTable}\r\n                editTablesRequest={editTablesRequest}\r\n              />\r\n            </Col>\r\n          ))}\r\n          <Col lg={4} md={6} xs={8}>\r\n            <NewTable count={tables.length} addTable={addTable} />\r\n            \r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n      {tables.length===0 && <div style={{margin:'0 auto',display:'block',top:250,position:'relative'}}><LoadingOutlined className=\"big-size\" spin />\r\n      </div>}\r\n    </Row>\r\n  );\r\n}\r\n"],"sourceRoot":""}