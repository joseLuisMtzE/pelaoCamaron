{"version":3,"sources":["shared/ApiWrapper.jsx","assets/camarones.jpg","assets/newComandaSound.mp3","components/Comandas/Comandas.jsx","shared/ejemplo_spinner.jsx","components/Comandas/ComandasTodas.jsx","routes/index.jsx","App.js","serviceWorker.js","index.js","components/Comandas/Comanda.jsx","constants/api.js","shared/Alerts.jsx"],"names":["getToken","localStorage","getItem","getRol","jwt_decode","user","rol","isAuthenticated","makeRequest","metodo","complement","payload","a","undefined","Error","axios","method","url","apiEndPoint","data","headers","Authorization","response","status","console","log","errorAlert","window","location","href","module","exports","socket","io","apiEndPointSocket","Comandas","timeoutId","comandas","areas","useState","comandasFiltradas","setComandasFiltradas","selectedArea","setSelectedArea","labelSelectedArea","setLabelSelectedArea","scrollingWrapper","useRef","valorOpcion","labelOpcion","options","newComandaSound","Audio","notificationSound","socketJoinRoom","room","emit","on","comanda","divScrollingWrapper","current","scrollTo","scrollWidth","children","length","classList","add","setTimeout","remove","play","socketLeaveRoom","onChange","value","selectedOptions","label","handleModalOk","resultado","filter","platillo","area","nombre","useEffect","disconnect","clearInterval","map","_id","className","type","icon","default","onClick","Modal","info","title","content","placeholder","onOk","ref","to","style","textAlign","width","height","boxShadow","id","htmlType","size","mostrar","Spinner","ComandasTodas","optionsEstado","comandasTodas","setComandasTodas","setArea","mesas","setMesas","valorOpcionEstado","valorOpcionMesas","optionsMesas","obtenerComandasTodas","obtenerAreas","obtenerMesas","inicializarState","onChangeEstado","onChangeMesas","mesa","noMesa","FilterFilled","resultadoEstado","estado","handleModalOkEstado","resultadoMesas","orden","handleModalOkMesas","Comanda","Layout","lazy","Tables","AddDishes","Ticket","CloseOrderPage","Login","HomeDelivery","EditHomeDelivery","MenuDishes","KitchenArea","Categories","usersView","OrdersView","Discount","usersEdit","ComandasPage","OrderView","AppRoutes","fallback","exact","path","component","render","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","cerrarComanda","cantidad","observaciones","cancelarComanda","src","camarones","alt","color","fecha","margin","Swal","fire","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","callback","successAlert","confirmDialog","successTitle","successText"],"mappings":"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","file":"static/js/main.7f98f8ed.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport url from '../constants/api';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { errorAlert } from './Alerts';\r\nfunction getToken() {\r\n  if (localStorage.getItem('token')) {\r\n    const tokenFinal = localStorage.getItem('token');\r\n    return tokenFinal;\r\n  }\r\n}\r\n\r\nexport function getRol() {\r\n  if (localStorage.getItem('token')) {\r\n    var decoded = jwt_decode(getToken());\r\n    return decoded.user.rol;\r\n  }\r\n}\r\n\r\nexport function isAuthenticated(){\r\n  if (localStorage.getItem('token')) {\r\n    return true\r\n  }else{\r\n    return false\r\n  }\r\n}\r\n\r\n\r\nexport const makeRequest = async (metodo, complement, payload) => {\r\n  try {\r\n    if (metodo === undefined) {\r\n      return Error('Falta metodo de la petición');\r\n    }\r\n\r\n    if (complement === undefined) {\r\n      return Error('Falta complento del url de la petición');\r\n    }\r\n\r\n    return await axios({\r\n      method: metodo,\r\n      url: url.apiEndPoint + complement,\r\n      data: payload,\r\n      headers: {\r\n        Authorization: 'Bearer ' + getToken()\r\n      }\r\n    });\r\n  } catch (err) {\r\n    if (err && err.response && err.response.status === 401) {\r\n      console.log('Unauthorized');\r\n      errorAlert(\r\n        'Autenticación fallida',\r\n        'Redirigiendo...',\r\n        () => (window.location.href = '/')\r\n      );\r\n    }\r\n    if (\r\n      (err && err.response && err.response.status === 400) ||\r\n      (err && err.response && err.response.status === 404)\r\n    ) {\r\n      return err;\r\n    }\r\n    if (err && err.response && err.response.status === 500) {\r\n      errorAlert('Oops...', 'Hubo un error');\r\n      return err;\r\n    }\r\n    console.log('ERROR', err);\r\n  }\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/camarones.7839ebe6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/newComandaSound.51377e11.mp3\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button, Modal, Cascader } from 'antd';\r\nimport { FilterFilled } from '@ant-design/icons';\r\nimport Comanda from './Comanda';\r\nimport { Link } from 'react-router-dom';\r\nimport { apiEndPointSocket } from '../../constants/api';\r\n\r\nimport io from 'socket.io-client';\r\n\r\nimport notificationSound from '../../assets/newComandaSound.mp3';\r\nimport { getRol } from '../../shared/ApiWrapper';\r\n// import apiEndPoint from '../../constants/api';\r\nconst socket = io(apiEndPointSocket.url);\r\n\r\n//Audio for notification when nueva comanda gets created\r\n\r\nconst Comandas = ({ comandas, areas }) => {\r\n  const [comandasFiltradas, setComandasFiltradas] = useState([]);\r\n  const [selectedArea, setSelectedArea] = useState('');\r\n  const [labelSelectedArea, setLabelSelectedArea] = useState('');\r\n\r\n  const scrollingWrapper = useRef();\r\n\r\n  let valorOpcion = '',\r\n    labelOpcion = '',\r\n    options = [],\r\n    timeoutId;\r\n\r\n  //Get the audio file\r\n  let newComandaSound = new Audio(notificationSound);\r\n\r\n  const socketJoinRoom = async (room) => {\r\n    console.log('Joined called with room: ', room);\r\n    socket.emit('joinRoom', room);\r\n    //Todas las comandas\r\n    socket.on('joinedToRoom', (response) => {\r\n      console.log('Conectadado correctamente, datos recibidos: ', response);\r\n    });\r\n\r\n    //Escucar cuando se crea una nueva comanda\r\n    socket.on('nuevaComanda', (comanda) => {\r\n      let divScrollingWrapper = scrollingWrapper.current;\r\n\r\n      console.log('Nueva comanda creada!!', comanda);\r\n\r\n      //update the list of comandas\r\n      setComandasFiltradas((comandas) => [...comandas, comanda]);\r\n      //scroll to the last item in comandas list\r\n      divScrollingWrapper.scrollTo(divScrollingWrapper.scrollWidth, 0);\r\n      //Add blink effect to the last children of comandas\r\n      divScrollingWrapper.children[\r\n        divScrollingWrapper.children.length - 1\r\n      ].classList.add('blink');\r\n      //once finished, remove the classs\r\n      timeoutId = setTimeout(() => {\r\n        divScrollingWrapper.children[\r\n          divScrollingWrapper.children.length - 1\r\n        ].classList.remove('blink');\r\n      }, 10000);\r\n\r\n      //Play a sound when a new comandas gets created\r\n      newComandaSound.play();\r\n    });\r\n  };\r\n\r\n  const socketLeaveRoom = async (room) => {\r\n    console.log('Leave called');\r\n    socket.emit('leaveRoom', room);\r\n    //Todas las comandas\r\n    socket.on('leavedRoom', (response) => {\r\n      console.log('Desconectado correctamente, datos recibidos: ', response);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    selectedArea && socketJoinRoom(selectedArea);\r\n    console.log('SELECTED AREA HA CAMBIADO, ahora es:', selectedArea);\r\n    return () => {\r\n      console.log('PREV IS: ', selectedArea);\r\n      selectedArea && socketLeaveRoom(selectedArea);\r\n    };\r\n  }, [selectedArea]);\r\n\r\n  useEffect(() => {\r\n    console.log('MOUNTING OF COMANDAS COMPONENT');\r\n    return function cleanup() {\r\n      socket.disconnect();\r\n      clearInterval(timeoutId);\r\n      console.log('UNMOUNT OF COMANDAS COMPONENT');\r\n    };\r\n  }, []);\r\n\r\n  if (areas.length !== 0) {\r\n    options = areas.map((area) => ({\r\n      value: area._id,\r\n      label: area.nombre,\r\n    }));\r\n  }\r\n\r\n  function onChange(value, selectedOptions) {\r\n    labelOpcion = selectedOptions[0].label;\r\n    valorOpcion = value[0];\r\n  }\r\n  function handleModalOk() {\r\n    // console.log('Se cambió el área a: ', labelOpcion);\r\n    setSelectedArea(valorOpcion);\r\n    setLabelSelectedArea(labelOpcion);\r\n    let resultado = [...comandas].filter(\r\n      (comanda) => comanda.platillo.area.nombre === labelOpcion\r\n    );\r\n    // console.log('resultado de comandas filtradas', resultado);\r\n    setComandasFiltradas(resultado);\r\n    //console.log('comandas Filtradas', comandasFiltradas);\r\n  }\r\n\r\n  /* MODAL */\r\n  function info() {\r\n    Modal.info({\r\n      title: 'Cambiar área',\r\n      content: (\r\n        <div>\r\n          <br />\r\n          <Cascader\r\n            options={options}\r\n            onChange={onChange}\r\n            placeholder=\"Area...\"\r\n          />\r\n        </div>\r\n      ),\r\n      onOk() {\r\n        handleModalOk();\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper-comandas\">\r\n      {getRol() === 'Dueño' || getRol() === 'Caja' || getRol() === 'Cocina' ? (\r\n        <div>\r\n          <h1 className=\"tituloPedidos\">COMANDAS</h1>\r\n          <div className=\"center\">\r\n            <h4>Elige un área de cocina para que puedas ver las comandas</h4>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<FilterFilled />}\r\n              default\r\n              onClick={info}\r\n            >\r\n              Cambiar área\r\n            </Button>\r\n          </div>\r\n          {labelSelectedArea && (\r\n            <div className=\"center\">\r\n              <h4 className=\"bold\">Area seleccionada:</h4>\r\n              <span className=\"normal-size\">{labelSelectedArea}</span>\r\n            </div>\r\n          )}\r\n          <div className=\"scrolling-wrapper\" ref={scrollingWrapper}>\r\n            {comandasFiltradas &&\r\n              comandasFiltradas.map((comanda) => (\r\n                <Comanda\r\n                  comanda={comanda}\r\n                  onChange={onChange}\r\n                  handleModalOk={handleModalOk()}\r\n                />\r\n              ))}\r\n          </div>\r\n          <div className=\"botonVerMas\">\r\n            <Link to=\"/comandas/todas\">\r\n              <Button\r\n                style={{\r\n                  textAlign: 'center',\r\n                  width: 120,\r\n                  height: 50,\r\n                  boxShadow: '0px 3px 5px 0px grey',\r\n                }}\r\n                id=\"Button-print\"\r\n                type=\"primary\"\r\n                htmlType=\"button\"\r\n                size=\"large\"\r\n              >\r\n                Ver todas\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"scrolling-wrapper\">\r\n            {comandasFiltradas &&\r\n              comandasFiltradas.map((comanda) => (\r\n                <Comanda comanda={comanda} onChange={onChange} mostrar={true} />\r\n              ))}\r\n          </div>\r\n          <div className=\"botonVerMas\">\r\n            <Link to=\"/comandas/todas\">\r\n              <Button\r\n                style={{\r\n                  textAlign: 'center',\r\n                  width: 120,\r\n                  height: 50,\r\n                  boxShadow: '0px 3px 5px 0px grey',\r\n                }}\r\n                id=\"Button-print\"\r\n                type=\"primary\"\r\n                htmlType=\"button\"\r\n                size=\"large\"\r\n              >\r\n                Ver todas\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Comandas;\r\n","import React from 'react';\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"sk-cube-grid\">\r\n          <div className=\"sk-cube sk-cube1\"></div>\r\n          <div className=\"sk-cube sk-cube2\"></div>\r\n          <div className=\"sk-cube sk-cube3\"></div>\r\n          <div className=\"sk-cube sk-cube4\"></div>\r\n          <div className=\"sk-cube sk-cube5\"></div>\r\n          <div className=\"sk-cube sk-cube6\"></div>\r\n          <div className=\"sk-cube sk-cube7\"></div>\r\n          <div className=\"sk-cube sk-cube8\"></div>\r\n          <div className=\"sk-cube sk-cube9\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeRequest, getRol } from '../../shared/ApiWrapper';\r\nimport { Button, Modal, Cascader } from 'antd';\r\nimport { FilterFilled } from '@ant-design/icons';\r\nimport Comanda from './Comanda';\r\n\r\nconst ComandasTodas = () => {\r\n  const [comandasTodas, setComandasTodas] = useState([]);\r\n  const [areas, setArea] = useState([]);\r\n  const [mesas, setMesas] = useState([]);\r\n  const [comandasFiltradas, setComandasFiltradas] = useState([]);\r\n  let valorOpcion = '';\r\n  let valorOpcionEstado = '';\r\n  let valorOpcionMesas = '';\r\n  let options = [];\r\n  let optionsEstado = [];\r\n  let optionsMesas = [];\r\n\r\n  /****** OBTENER COMANDAS ******/\r\n  //Obtener todas las comandas\r\n  const obtenerComandasTodas = async () => {\r\n    try {\r\n      let response = await makeRequest('GET', 'comandas?limit=1000000');\r\n      let data = response.data.data;\r\n      //console.log('data', data);\r\n      return data;\r\n    } catch (err) {\r\n      //console.log(err);\r\n    }\r\n  };\r\n  /***** OBTENER TODAS LAS AREAS ******/\r\n  //Obtener Areas\r\n  const obtenerAreas = async () => {\r\n    try {\r\n      let response = await makeRequest('GET', 'areas');\r\n      let data = response.data.data;\r\n      ////console.log('data', data);\r\n      return data;\r\n    } catch (err) {\r\n      //console.log(err);\r\n    }\r\n  };\r\n  /*OBTENER MESAS */\r\n  const obtenerMesas = async () => {\r\n    try {\r\n      let response = await makeRequest('GET', 'mesas?isActive=true');\r\n      let data = response.data.data;\r\n      ////console.log('data', data);\r\n      return data;\r\n    } catch (err) {\r\n      //console.log(err);\r\n    }\r\n  };\r\n  //Inicializar state\r\n  const inicializarState = async () => {\r\n    const comandasTodas = await obtenerComandasTodas();\r\n    setComandasTodas(comandasTodas);\r\n    const areas = await obtenerAreas();\r\n    setArea(areas);\r\n    const mesas = await obtenerMesas();\r\n    setMesas(mesas);\r\n  };\r\n  useEffect(() => {\r\n    inicializarState();\r\n  }, []);\r\n  //console.log('mesas', mesas);\r\n\r\n  /******FILTRAR POR ÁREA ******/\r\n  if (areas.length !== 0) {\r\n    options = areas.map((area) => ({\r\n      value: area.nombre,\r\n      label: area.nombre,\r\n    }));\r\n  }\r\n  ////console.log(options);\r\n  function onChange(value) {\r\n    valorOpcion = value[0];\r\n    ////console.log(value);\r\n  }\r\n\r\n  function handleModalOk() {\r\n    //console.log('ok', valorOpcion);\r\n    let resultado = [...comandasTodas].filter(\r\n      (comanda) => comanda.platillo.area.nombre === valorOpcion\r\n    );\r\n    //console.log('resultado de comandas filtradas', resultado);\r\n    setComandasFiltradas(resultado);\r\n    ////console.log('comandas Filtradas', comandasFiltradas);\r\n  }\r\n  //Modal\r\n  function info() {\r\n    Modal.info({\r\n      title: 'Cambiar área',\r\n      content: (\r\n        <div>\r\n          <br />\r\n          <Cascader\r\n            options={options}\r\n            onChange={onChange}\r\n            placeholder=\"Area...\"\r\n          />\r\n        </div>\r\n      ),\r\n      onOk() {\r\n        handleModalOk();\r\n      },\r\n    });\r\n  }\r\n\r\n  /******FILTRAR POR ESTADO ******/\r\n  optionsEstado = [\r\n    {\r\n      value: 'En proceso',\r\n      label: 'En proceso',\r\n    },\r\n    {\r\n      value: 'Cerrada',\r\n      label: 'Cerrada',\r\n    },\r\n    {\r\n      value: 'Cancelada',\r\n      label: 'Cancelada',\r\n    },\r\n  ];\r\n\r\n  function onChangeEstado(value) {\r\n    valorOpcionEstado = value[0];\r\n    ////console.log(value);\r\n  }\r\n\r\n  function handleModalOkEstado() {\r\n    //console.log('ok', valorOpcionEstado);\r\n    let resultadoEstado = [...comandasTodas].filter(\r\n      (comanda) => comanda.estado === valorOpcionEstado\r\n    );\r\n    //console.log('resultadoEstado de comandas filtradas', resultadoEstado);\r\n    setComandasFiltradas(resultadoEstado);\r\n    ////console.log('comandas Filtradas', comandasFiltradas);\r\n  }\r\n\r\n  function infoEstado() {\r\n    Modal.info({\r\n      title: 'Cambiar por estado',\r\n      content: (\r\n        <div>\r\n          <br />\r\n          <Cascader\r\n            options={optionsEstado}\r\n            onChange={onChangeEstado}\r\n            placeholder=\"Estado...\"\r\n          />\r\n        </div>\r\n      ),\r\n      onOk() {\r\n        handleModalOkEstado();\r\n      },\r\n    });\r\n  }\r\n\r\n  /******FILTRADO POR MESA ******/\r\n  if (mesas.length !== 0) {\r\n    optionsMesas = mesas.map((mesa) => ({\r\n      value: mesa.noMesa,\r\n      label: mesa.noMesa,\r\n    }));\r\n  }\r\n  function onChangeMesas(value) {\r\n    valorOpcionMesas = value[0];\r\n    ////console.log(value);\r\n  }\r\n  function handleModalOkMesas() {\r\n    //console.log('ok', valorOpcionMesas);\r\n    let resultadoMesas = [...comandasTodas].filter(\r\n      (comanda) => comanda.orden.mesa.noMesa === valorOpcionMesas\r\n    );\r\n    //console.log('resultadoEstado de comandas filtradas', resultadoEstado);\r\n    setComandasFiltradas(resultadoMesas);\r\n    ////console.log('comandas Filtradas', comandasFiltradas);*/\r\n  }\r\n  function infoMesas() {\r\n    Modal.info({\r\n      title: 'Cambiar por Mesas',\r\n      content: (\r\n        <div>\r\n          <br />\r\n          <Cascader\r\n            options={optionsMesas}\r\n            onChange={onChangeMesas}\r\n            placeholder=\"Mesas...\"\r\n          />\r\n        </div>\r\n      ),\r\n      onOk() {\r\n        handleModalOkMesas();\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper-comandas\">\r\n      {getRol() == 'Dueño' || getRol() === 'Cocina' || getRol() === 'Caja' ? (\r\n        <div>\r\n          {' '}\r\n          <h1 className=\"tituloPedidos\"> TODAS LAS COMANDAS </h1>\r\n          <div className=\"botonesFiltrado\">\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<FilterFilled />}\r\n              default\r\n              onClick={info}\r\n            >\r\n              Cambiar área\r\n            </Button>\r\n          </div>\r\n          <div className=\"botonesFiltrado\">\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<FilterFilled />}\r\n              default\r\n              onClick={infoEstado}\r\n            >\r\n              Cambiar estado\r\n            </Button>\r\n          </div>\r\n          <div className=\"botonesFiltrado\">\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<FilterFilled />}\r\n              default\r\n              onClick={infoMesas}\r\n            >\r\n              Cambiar mesas\r\n            </Button>\r\n          </div>\r\n          <div className=\"scrolling-wrapper\">\r\n            <div className=\"scrolling-wrapper\">\r\n              {comandasFiltradas &&\r\n                comandasFiltradas.map((comanda) => (\r\n                  <Comanda comanda={comanda} mostrar={true} />\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default ComandasTodas;\r\n","import React, { Suspense, lazy } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\n//Este es de prueba y solo ilustrativo de un spinner para mostrar mienstras los componenntes cargan\r\nimport Spinner from '../shared/ejemplo_spinner';\r\nimport ComandasTodas from '../components/Comandas/ComandasTodas';\r\nconst Layout = lazy(() => import('../pages/Layout/Sidernav'));\r\nconst Tables = lazy(() => import('../pages/Tables'));\r\nconst AddDishes = lazy(() => import('../pages/AddDishes'));\r\nconst Ticket = lazy(() => import('../pages/Ticket'));\r\nconst CloseOrderPage = lazy(() => import('../pages/CloseOrderPage'));\r\nconst Login = lazy(() => import('../pages/LoginPage'));\r\nconst HomeDelivery = lazy(() => import('../pages/HomeDelivery'));\r\nconst EditHomeDelivery = lazy(() => import('../pages/EditHomeDelivery'));\r\nconst MenuDishes = lazy(() => import('../pages/MenuDishesPage'));\r\nconst KitchenArea = lazy(() => import('../pages/KitchenArea'));\r\nconst Categories = lazy(() => import('../pages/Categories'));\r\nconst usersView = lazy(() => import('../pages/Userview'));\r\nconst OrdersView = lazy(() => import('../pages/OrdersView'));\r\nconst Discount = lazy(() => import('../components/Discounts/Discount'));\r\nconst usersEdit = lazy(() => import('../components/UsersView/UserEdit'));\r\nconst ComandasPage = lazy(() => import('../pages/ComandasPage'));\r\n\r\nconst OrderView = lazy(() => import('../pages/OrderView'));\r\n/*\r\n              <Route exact path=\"/comandas-todas\" component={ComandasTodas} /> */\r\n\r\nexport default function AppRoutes() {\r\n  return (\r\n    <>\r\n      <Suspense fallback={<Spinner size={130} />}>\r\n        <BrowserRouter>\r\n          <Layout>\r\n            <Switch>\r\n              <Route exact path=\"/cerrar-orden\" component={CloseOrderPage} />\r\n              <Route exact path=\"/mesas\" component={Tables} />\r\n              <Route\r\n                exact\r\n                path=\"/agregar-platillos/:id\"\r\n                component={AddDishes}\r\n              />\r\n              <Route exact path=\"/home-delivery\" component={HomeDelivery} />\r\n              <Route exact path=\"/edit-home-delivery\" component={EditHomeDelivery} />\r\n\r\n              <Route exact path=\"/\" component={Login} />\r\n              <Route exact path=\"/menu-dishes\" component={MenuDishes} />\r\n              <Route exact path=\"/areas-cocina\" component={KitchenArea} />\r\n              <Route\r\n                exact\r\n                path=\"/categorias-alimentos\"\r\n                component={Categories}\r\n              />\r\n              <Route exact path=\"/ticket/:id\" component={Ticket} />\r\n\r\n              <Route exact path=\"/ver-orden/:id\" component={OrderView} />\r\n              <Route\r\n                exact\r\n                path=\"/ordenes-vista-general\"\r\n                component={OrdersView}\r\n              />\r\n              <Route exact path=\"/descuento/:id\" component={Discount} />\r\n              <Route exact path=\"/comandas\" component={ComandasPage} />\r\n              <Route\r\n                exact\r\n                path=\"/comandas/todas\"\r\n                render={() => <ComandasTodas areas={[]} />}\r\n              />\r\n\r\n              <Route exact path=\"/vista-usuarios\" component={usersView} />\r\n              <Route exact path=\"/Editar-usuario\" component={usersEdit} />\r\n              <Route exact path=\"/Editar-usuario/:id\" component={usersEdit} />\r\n            </Switch>\r\n          </Layout>\r\n        </BrowserRouter>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Routes from './routes/index';\r\n\r\nfunction App() {\r\n  return <Routes />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/main.css';\r\nimport 'antd/dist/antd.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { useEffect } from 'react';\r\nimport camarones from '../../assets/camarones.jpg';\r\nimport { Tag, Button } from 'antd';\r\nimport Swal from 'sweetalert2';\r\nimport { makeRequest } from '../../shared/ApiWrapper';\r\nimport Comandas from './Comandas';\r\n\r\nfunction Comanda({ comanda, noMesa, mostrar, handleModalOk }) {\r\n  noMesa = noMesa || comanda.orden.mesa.noMesa;\r\n  console.log('DATA for comanda and mesa ', comanda, noMesa);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect');\r\n  });\r\n\r\n  /*CERRAR COMANDA */\r\n  const cerrarComanda = async () => {\r\n    try {\r\n      let response = await makeRequest('PUT', `comandas/${comanda._id}`, {\r\n        platillo: comanda.platillo._id,\r\n        cantidad: comanda.cantidad,\r\n        estado: 'Cerrada',\r\n        observaciones: comanda.observaciones,\r\n        orden: comanda.orden._id,\r\n      });\r\n      let data = response.data.data;\r\n      //window.location.href = window.location.href;\r\n      ////console.log('data', data);\r\n      return data;\r\n    } catch (err) {\r\n      //console.log(err);\r\n    }\r\n  };\r\n\r\n  /*CANCELAR COMANDA */\r\n  const cancelarComanda = async () => {\r\n    try {\r\n      let response = await makeRequest('PUT', `comandas/${comanda._id}`, {\r\n        platillo: comanda.platillo._id,\r\n        cantidad: comanda.cantidad,\r\n        estado: 'Cancelada',\r\n        observaciones: comanda.observaciones,\r\n        orden: comanda.orden._id,\r\n      });\r\n      let data = response.data.data;\r\n      //window.location.href = window.location.href;\r\n      ////console.log('data', data);\r\n      return data;\r\n    } catch (err) {\r\n      //console.log(err);\r\n    }\r\n  };\r\n\r\n  function alertCerrar() {\r\n    Swal.fire({\r\n      title: '¿Estás seguro cerrarla?',\r\n      text: '¡No podras revertir está acción!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sí, ¡ciérrala!',\r\n      cancelButtonText: 'Cancelar',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log('COMANDA CERRADA EXITOSAMENTE');\r\n        cerrarComanda();\r\n      }\r\n    });\r\n  }\r\n\r\n  function alertCancelar() {\r\n    Swal.fire({\r\n      title: '¿Estás seguro cancelarla?',\r\n      text: '¡No podras revertir está acción!',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Sí, ¡cancélala!',\r\n      cancelButtonText: 'Cancelar',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        console.log('COMANDA CANCELADA EXITOSAMENTE');\r\n        cancelarComanda();\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"card-comanda\">\r\n      <div className=\"card-containr-comanda\">\r\n        <div className=\"center\">\r\n          <img className=\"imgRedonda\" src={camarones} alt=\"Camarones\"></img>\r\n        </div>\r\n        <h1 className=\"titulo-orden\">{comanda.platillo.nombre}</h1>\r\n        <br></br>\r\n        {comanda.estado === 'Cerrada' ? (\r\n          <p className=\"texto-orden\">\r\n            <td>\r\n              <Tag color=\"success\">{comanda.estado}</Tag>\r\n            </td>\r\n          </p>\r\n        ) : comanda.estado === 'En proceso' ? (\r\n          <td>\r\n            <p className=\"texto-orden\">\r\n              <Tag color=\"warning\">{comanda.estado}</Tag>\r\n            </p>\r\n          </td>\r\n        ) : (\r\n          <p className=\"texto-orden\">\r\n            <td>\r\n              <Tag color=\"error\">{comanda.estado}</Tag>\r\n            </td>\r\n          </p>\r\n        )}\r\n\r\n        <br></br>\r\n        <p className=\"texto-orden\">\r\n          <b>Cantidad:</b> {comanda.cantidad}\r\n        </p>\r\n        <br></br>\r\n        <p className=\"texto-orden\">\r\n          <b>Mesa:</b> {noMesa}\r\n        </p>\r\n        <br></br>\r\n        <p className=\"texto-orden\">\r\n          <b>fecha:</b> {comanda.fecha}\r\n        </p>\r\n        <br></br>\r\n        <p className=\"texto-orden\">\r\n          <b>Observaciones:</b> {comanda.observaciones}\r\n        </p>\r\n        {(mostrar &&\r\n          (comanda.estado === 'En proceso' ? (\r\n            <div className=\"containerBotonesComandas\">\r\n              <Button\r\n                style={{\r\n                  textAlign: 'center',\r\n                  width: 100,\r\n                  height: 40,\r\n                  boxShadow: '0px 3px 5px 0px grey',\r\n                  margin: '2px',\r\n                }}\r\n                id=\"Button-print\"\r\n                type=\"dashed\"\r\n                htmlType=\"button\"\r\n                size=\"large\"\r\n                onClick={() => alertCerrar()}\r\n              >\r\n                Cerrar\r\n              </Button>\r\n\r\n              <Button\r\n                style={{\r\n                  textAlign: 'center',\r\n                  width: 100,\r\n                  height: 40,\r\n                  boxShadow: '0px 3px 5px 0px grey',\r\n                  margin: '2px',\r\n                }}\r\n                id=\"Button-print\"\r\n                type=\"danger\"\r\n                htmlType=\"button\"\r\n                size=\"large\"\r\n                onClick={() => alertCancelar()}\r\n              >\r\n                Cancelar\r\n              </Button>\r\n            </div>\r\n          ) : null)) ||\r\n          null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Comanda;\r\n","export default {\r\n  apiEndPoint: 'https://posrestfront4d.herokuapp.com/api/v1/'\r\n};\r\nexport const apiEndPointSocket = {\r\n  url: 'https://posrestfront4d.herokuapp.com'\r\n};\r\n","import Swal from 'sweetalert2';\r\n\r\nexport function errorAlert(title, text, callback = function() {}) {\r\n  Swal.fire({\r\n    icon: 'error',\r\n    title: title,\r\n    text: text\r\n  }).then(result => {\r\n    if (result.value) {\r\n      callback();\r\n    }\r\n  });\r\n}\r\n\r\nexport function successAlert(title, text) {\r\n  Swal.fire({\r\n    icon: 'success',\r\n    title: title,\r\n    text: text\r\n  });\r\n}\r\n\r\nexport function confirmDialog(\r\n  title,\r\n  text,\r\n  successTitle,\r\n  successText,\r\n  callback\r\n) {\r\n  Swal.fire({\r\n    title: title,\r\n    text: text,\r\n    icon: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonColor: '#3085d6',\r\n    cancelButtonColor: '#d33',\r\n    confirmButtonText: 'Si'\r\n  }).then(result => {\r\n    if (result.value) {\r\n      Swal.fire(successTitle, successText, 'success');\r\n      callback();\r\n    }\r\n  });\r\n}\r\n"],"sourceRoot":""}